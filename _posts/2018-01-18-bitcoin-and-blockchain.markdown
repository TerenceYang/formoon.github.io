---
layout:         page
title:          比特币核心概念及算法
subtitle:       区块链、挖矿还有其它
card-image:     https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1516271087446&di=b7e915316b121a2301e2dc786c16a8d1&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fq_mini%2Cc_zoom%2Cw_640%2Fupload%2F20170809%2F2fb6e062e1f54d5897b44766fdfecd80_th.jpg
date:           2018-01-18
tags:           toSeven
post-card-type: image
---
![](https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1516271087446&di=b7e915316b121a2301e2dc786c16a8d1&imgtype=0&src=http%3A%2F%2Fimg.mp.itc.cn%2Fq_mini%2Cc_zoom%2Cw_640%2Fupload%2F20170809%2F2fb6e062e1f54d5897b44766fdfecd80_th.jpg)  

bitconin项目地址位于github[仓库](https://github.com/bitcoin/bitcoin)，当前各种“币”，基本都是从抄写bitcoin代码开始起步的。想要深度研究，从看源码开始不可避免。  
* P2P：电骡、迅雷、BT，在中国网络影视的发展让大家对P2P很熟悉，可能已经没有人记得比特币实际上是第一批P2P的实践者。所有交易记录在全网通过P2P的方式广播，每个人都保存一份完整的交易记录。所以也叫去中心化。  
* 去中心化：bitcoin的去中心化是指的账本去中心化，每个人都拥有完整的交易记录。因此不会出现认为修改某一个账本就导致财产丢失的情况，在这种模式下，想有效的修改以前的交易记录，必须做到51%的联网机器都认可才可能成功，而这肯定是做不到的。  
实际在整个比特币系统的运行中，P2P的特点实际上还是要有中心节点负责支持维护，这是显然的，比如我们去支持系统查询一下“创世纪”区块（区块链中的根节点）：{% highlight bash %}
> curl https://blockchain.info/rawblock/00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048


{
    "hash":"00000000839a8e6886ab5951d76f411475428afc90947ee320161bbf18eb6048",
    "ver":1,
    "prev_block":"000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
    "mrkl_root":"0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098",
    "time":1231469665,
    "bits":486604799,
    "fee":0,
    "nonce":2573394689,
    "n_tx":1,
    "size":215,
    "block_index":14850,
    "main_chain":true,
    "height":1,
    "tx":[

{
   "lock_time":0,
   "ver":1,
   "size":134,
   "inputs":[
      {
         "sequence":4294967295,
         "witness":"",
         "script":"04ffff001d0104"
      }
   ],
   "weight":536,
   "time":1231469665,
   "tx_index":14854,
   "vin_sz":1,
   "hash":"0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098",
   "vout_sz":1,
   "relayed_by":"0.0.0.0",
   "out":[
      {
         "spent":false,
         "tx_index":14854,
         "type":0,
         "addr":"12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX",
         "value":5000000000,
         "n":0,
         "script":"410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac"
      }
   ]
}]
 }
{% endhighlight %}
*  电子签名：比特币也是最早实践电子签名的应用之一。所有的交易数据，都是由交易者的私人证书签名的，对交易的修改会导致签名失效，其实这个才是对资产最大的保证。比特币电子签名使用[ecdsa算法](http://8btc.com/article-140-1.html)，这个算法有一个小缺陷，就是如果交易记录中仅仅修改了一个字节，仍然会验证通过。当然这个修改无法做到修改交易金额，但可能造成后续的哈希计算得到完全不同的ID值。在攻击方网络足够快、广播能力足够强的话，可能在小范围内造成的伪造出现。历史上曾经发生过利用这个方式伪造交易失败并向交易商索赔成功的事情，但是究其原因不算比特币系统设计问题，如果交易商严格遵循交易原则，只接受程序结果，不人为干预，是可以避免损失的。  
* 区块链：区块链是老概念，软件专业的算法课程，基本上头几节课就会涉及到链表的概念。区块链就是链表，除了第一个“创世纪”节点，每一个节点都有一个指针指向前一个节点。单向链表的特征使得肯定会出现多个节点指向同一个节点的情况，这种情况就是分叉，无限制的发展就成为了树。比特币系统的设计是不允许这种情况的，每次都会在链表中选择最长的一条链表进行下一个节点的链接，而最终短的分支会被抛弃。比特币的设计中，一个区块之后链接到6个另外的区块，就可以确认本区块的交易都是确认、安全的。一个示意性的区块链节点结构图示如下：  
![](http://news.btcfans.com/data/attachment/portal/201402/18/5.png)  
区块链是把一个基本数据结构模型应用于去中心化记账算法的成功范例。优点是这种创新必将对今后的金融系统设计造成深刻影响，缺点则是至今似乎尚未发现这种区块链结构在其它领域的优势应用或者优选方案。  
* 挖矿：区块链中每一个节点都是用来记账的。为了防止节点被伪造，节点的生成有严格、耗时的要求，只有找到一个新的节点符合这些要求，这个节点才能把最近发生的交易记录进去并链接到区块链主链之上。寻找一个新的记账节点的过程就是挖矿。  
* 挖矿算法：如果用python来表述一下挖矿算法，源码大致是这样的：  
    ```python
    import hashlib, struct
    ver = 1
    prev_block = "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f"
    mrkl_root = "0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098"
    time = 1231469665
    bits = 486604799
    nonce = 2573394689
    
    hex_str = struct.pack("<L", ver) + prev_block.decode('hex')[::-1] +\
        mrkl_root.decode('hex')[::-1] + struct.pack("<LLL", time, bits, nonce)
    
    hash_str = hashlib.sha256(hashlib.sha256(hex_str).digest()).digest()
    # bitcoin矿机就是使用显卡或者FPGA实现sha256算法，通过暴力循环找到一个合适的nonce  
    ...
    block_hash = hash_str[::-1].encode('hex_codec')
	#以下是伪代码
	if meetReqirements(block_hash):
		newBlock=bookkeeping(block_hash)
		block_hash(newBlock)
    ```
挖矿的核心是进行两次的sha256运算，并且要求结果符合当前比特币要求的难度值，难度值表示两次sha256就算的结果，前面有符合难度值的0。意思是，假设计算结果是"000000xx...xxxxxx"，前面0的个数，必须符合难度的要求，而且这个难度值在比特币系统中是不断增加的，也就是说挖矿难度越来越大。  
参考上面的链表图，开头定义的几个常量都是节点的基本资料，不可改变，可变的只有nonce。而sha256 hash算法的特点，使得最终结果只能暴力循环所有的nonce可能值，才可能得到最终结果，至今尚无投机取巧的办法。  
这个设计是为了区块链的生成没有那么容易，从而伪造区块链就成了拼计算能力的行为，而挖矿如此流行，计算能力想超过全球计算能力的半数已经是一件不可能的事情。从而在技术上杜绝了“账本伪造”这种可能性。这也叫做：“工作量证明（Proof-of-Work）”的共识达成机制。  
* 矿池：因为挖矿的难度越来越高，今天一个人使用自己的电脑挖矿成功的事情已经极难出现，因此出现了在辅助网站或者辅助程序的帮助下，把大家零散的计算能力汇聚起来，一起进行挖矿，收益大家分享的方式，这就是矿池。矿池的主要算法是把上述的一个nonce值分段，每人穷举其中一小段，从而并行起来提高找到正确nonce值的概率。  
* UTXO：一种记账方法，每个交易的记录，仅记录最终最近的交易及“UTXO”也就是未花费输出（Unspent Transaction Output）。这种方式的特点是：1.得到完成的交易流水需要去遍历区块链，而不是某一个节点。2.根据1，显然大大缩小节点的数据尺寸。这对分布式每个人都保存一份账本的情况下，可以大大的降低空间需求。
* 智能合约：比特币系统中的整个过程的商业逻辑就算做智能合约，与他人完成交易就相当于双方共同签订一份合约，随后利用区块链记账、交易广播、工作量证明等手段保障合约正确执行并不被篡改、攻击。这个描述比较抽象化，但智能合约这个概念本身也是抽象化的。以我个人认为，“智能合约”的理念是比特币系统中最可贵的概念。  
* 交易确认：交易确认分成两个部分，一个是区块生成后的确认，一个是一笔比特币交易完成后的确认，两者都设定了交易确认时间。主要原因都是P2P的广播是需要时间的，在这个广播被尽可能多的人收到之前就确认交易，前者会造成区块链的冲突而出现分支，未能及时矫正的分支甚至会成为树从而造成区块链崩溃。后者未能广播之前就确认会出现伪造的可能，而广播被更多人收到之后，伪造就需要工作量证明，也就不可能达到了。  



#### 参考链接
[bitcoin: 计算 Block Hash](https://laravel-china.org/articles/6517/bitcoin-computing-block-hash)  
[sha256算法](https://baike.baidu.com/item/sha256/9726070?fr=aladdin)  

























